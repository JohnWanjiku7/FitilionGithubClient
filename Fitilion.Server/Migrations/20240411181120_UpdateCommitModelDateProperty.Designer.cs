// <auto-generated />
using Fitilion.Server.Persistense;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fitilion.Server.Migrations
{
    [DbContext(typeof(GitHubCommitsDbContext))]
    [Migration("20240411181120_UpdateCommitModelDateProperty")]
    partial class UpdateCommitModelDateProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fitilion.Server.Models.GitHubCommit", b =>
                {
                    b.Property<string>("CommitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommitAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Starred")
                        .HasColumnType("bit");

                    b.Property<string>("StarredTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommitId");

                    b.ToTable("GitHubCommits");
                });
#pragma warning restore 612, 618
        }
    }
}
